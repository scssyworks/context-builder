{"version":3,"file":"contextBuilder.esm.js","sources":["../../src/Select/index.ts","../../src/CursorPlacement/index.ts","../../src/Beacon/index.ts","../../src/index.ts"],"sourcesContent":["import { Selector, TypeNodes } from \"../types\";\n\nexport type HTMLSelector = Select | Selector;\nexport type HTMLTypeNodes = Select | TypeNodes;\n\nexport class Select {\n    body: boolean | HTMLBodyElement;\n    elements: Node[];\n    parent: Select | null;\n    constructor(selector?: HTMLSelector) {\n        // Check if document and document.body exist\n        this.body = typeof document !== 'undefined' && !!document && (document.body as HTMLBodyElement);\n        // Resolve references\n        this.elements = [];\n        if (this.body && selector) {\n            if (typeof selector === 'string') {\n                this.elements = [...document.querySelectorAll(selector)] as Node[];\n            } else if (selector instanceof Node || selector instanceof EventTarget) {\n                this.elements = [selector] as Node[];\n            } else if (\n                selector instanceof NodeList\n                || selector instanceof HTMLCollection\n            ) {\n                this.elements = [...selector] as Node[];\n            } else if (Object.prototype.hasOwnProperty.call(selector, 'length')) { // For jQuery or jQuery like objects\n                for (let i = 0; i < (selector as Node[]).length; i++) {\n                    this.elements.push((selector as Node[])[i]);\n                }\n            } else if (selector instanceof Select) {\n                this.elements = [...selector.elements] as Node[];\n                this.parent = selector.parent;\n            }\n        }\n        // Resolve parent\n        this.parent = this.getParentSelection();\n    }\n    /**\n     * Returns a Select object for parent nodes\n     */\n    getParentSelection(): (Select | null) {\n        const parentNodeList = this.elements.map(el => el.parentNode).filter(el => !!el);\n        if (parentNodeList.length) {\n            return new Select(parentNodeList as Node[]);\n        }\n        return null;\n    }\n    /**\n     * Query children of current element\n     * @param {string} selector Selector\n     */\n    query(selector: string): Select {\n        const selected = [] as Node[];\n        this.elements.forEach(el => {\n            if (el instanceof HTMLElement) {\n                const children = [...el.querySelectorAll(selector)] as HTMLElement[];\n                children.forEach(child => {\n                    if (selected.indexOf(child) === -1) {\n                        selected.push(child);\n                    }\n                });\n            }\n        });\n        return new Select(selected);\n    }\n    /**\n     * Appends HTML body to current element(s)\n     * @param {string | Node | NodeList | HTMLCollection | Node[] | Select} nodes \n     */\n    append(nodes: HTMLTypeNodes): Select {\n        if (this.body) {\n            let consumableNodes: Select;\n            if (typeof nodes === 'string') {\n                // Expecting a plain HTML string\n                const tempDiv = document.createElement('div');\n                tempDiv.innerHTML = nodes;\n                consumableNodes = new Select(tempDiv.childNodes);\n            } else {\n                // For everything else treat them as regular nodes\n                consumableNodes = new Select(nodes);\n            }\n            this.elements.forEach((target, i) => {\n                if (consumableNodes.elements.length === 1) {\n                    target.appendChild(consumableNodes.elements[0]); // Keeping intact the original reference\n                } else {\n                    const fragment = document.createDocumentFragment();\n                    consumableNodes.elements.forEach(n => {\n                        fragment.appendChild(i === 0 ? n : n.cloneNode());\n                    });\n                    target.appendChild(fragment);\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Prepends HTML body to current element(s)\n     * @param {string | Node | NodeList | HTMLCollection | Node[] | Select} nodes\n     */\n    prepend(nodes: HTMLTypeNodes): Select {\n        if (this.body) {\n            this.elements.forEach(target => {\n                const currentFragment = (new Select(target.childNodes)).detach();\n                (new Select(target)).append(nodes).append(currentFragment);\n            });\n        }\n        return this;\n    }\n    /**\n     * Removes current set of elements from DOM and return DocumentFragment as a Select instance\n     */\n    detach(): Select {\n        if (this.body) {\n            const fragment = document.createDocumentFragment();\n            this.elements.forEach(el => {\n                fragment.appendChild(el);\n            });\n            return new Select(fragment);\n        }\n        return this;\n    }\n    /**\n     * Clears current elements inner HTML\n     */\n    clear(): Select {\n        if (this.body) {\n            this.elements.forEach(el => {\n                if (el instanceof HTMLElement) {\n                    el.innerHTML = '';\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Returns current map of HTML strings\n     */\n    htmlMap(): string[] {\n        return this.map((el: any) => {\n            if (el instanceof HTMLElement) {\n                return el.innerHTML;\n            }\n            return '';\n        });\n    }\n    /**\n     * Returns current map of text strings\n     */\n    textMap(): string[] {\n        return this.map(el => {\n            if (el instanceof HTMLElement) {\n                return el.textContent || el.innerText;\n            }\n            return '';\n        });\n    }\n    /**\n     * Returns current list of element as array\n     * @param {Function} evaluatorFn Evaluator function\n     */\n    map(evaluatorFn: (n: Node, i: number) => any): any[] {\n        if (!this.body || typeof evaluatorFn !== 'function') {\n            return this.elements;\n        }\n        return this.elements.map(evaluatorFn);\n    }\n    /**\n     * Returns current body tag as a Select instance\n     */\n    getBodyTag(): Select {\n        return new Select(this.body as HTMLBodyElement);\n    }\n    /**\n     * Returns current Select reference children\n     */\n    children(): Select {\n        const elements = [] as Node[];\n        this.elements.forEach(el => {\n            [...el.childNodes].forEach(n => {\n                if (elements.indexOf(n) === -1) {\n                    elements.push(n);\n                }\n            });\n        });\n        return new Select(elements);\n    }\n    /**\n     * Binds a regular event listener\n     */\n    on<K extends keyof WindowEventMap>(eventType: K, cb: (e: WindowEventMap[K]) => any, useCapture?: boolean): Select {\n        this.elements.forEach(el => {\n            el.addEventListener(eventType, cb as EventListener, useCapture);\n        });\n        return this;\n    }\n    /**\n     * Removes a regular event listener\n     */\n    off<K extends keyof WindowEventMap>(eventType: K, cb: (e: WindowEventMap[K]) => any, useCapture?: boolean): Select {\n        this.elements.forEach(el => {\n            el.removeEventListener(eventType, cb as EventListener, useCapture);\n        });\n        return this;\n    }\n    /**\n     * Auto detach event listener after first call\n     * @param {string} eventType Event name\n     * @param {Function} cb Callback function\n     * @param {boolean} useCapture Use capture mode\n     */\n    once<K extends keyof WindowEventMap>(eventType: K, cb: (e: WindowEventMap[K]) => any, useCapture?: boolean): Select {\n        const ref = this;\n        const onceCb = function (e: WindowEventMap[K]) {\n            cb.apply(this, [e]);\n            ref.elements.forEach(el => {\n                el.removeEventListener(eventType, onceCb, useCapture);\n            });\n        } as EventListener;\n        this.elements.forEach(el => {\n            el.addEventListener(eventType, onceCb, useCapture);\n        });\n        return this;\n    }\n    /**\n     * Returns map of DOMRect objects\n     */\n    bounds(): (DOMRect | null)[] {\n        return this.map(el => {\n            if (el instanceof HTMLElement) {\n                return el.getBoundingClientRect();\n            }\n            return null;\n        });\n    }\n    /**\n     * Sets CSS properties to element(s)\n     * @param {object} obj CSS properties\n     */\n    setCSSProps(obj: { [prop: string]: any }): Select {\n        this.elements.forEach(el => {\n            if (el instanceof HTMLElement) {\n                Object.keys(obj).forEach((prop: any) => {\n                    el.style[prop] = obj[prop];\n                });\n            }\n        });\n        return this;\n    }\n    /**\n     * Sets HTML element attributes\n     * @param {object} obj HTML element attributes\n     */\n    setAttr(obj: { [prop: string]: any }): Select {\n        this.elements.forEach(el => {\n            if (el instanceof HTMLElement) {\n                Object.keys(obj).forEach(attr => {\n                    el.setAttribute(attr, obj[attr]);\n                });\n            }\n        });\n        return this;\n    }\n    /**\n     * Returns a map of attribute values for selected elements\n     * @param {string} attr Attribute\n     */\n    getAttrMap(attr: string): string[] {\n        return this.map(el => {\n            if (el instanceof HTMLElement) {\n                return el.getAttribute(attr);\n            }\n            return undefined;\n        });\n    }\n    /**\n     * Enforce a repaint of targeted elements\n     */\n    repaint(): Select {\n        this.elements.forEach(el => {\n            if (el instanceof HTMLElement) {\n                el.offsetHeight; // Accessing offset height somehow triggers a reflow\n            }\n        });\n        return this;\n    }\n    /**\n     * Returns true if current element is contained in this selector\n     * @param {Node | NodeList | HTMLCollection | Select} nodes Element\n     */\n    contains(nodes: HTMLSelector): boolean {\n        return (new Select(nodes)).map(n => {\n            for (const el of this.elements) {\n                if (el.contains(n)) {\n                    return true;\n                }\n            }\n            return false;\n        }).indexOf(false) === -1;\n    }\n    /**\n     * Static method to create a new HTML node\n     * @param {string | Node | NodeList | HTMLCollection | Node[] | Select} nodes\n     */\n    static create(nodes: HTMLTypeNodes): Select {\n        return (new Select(document.createDocumentFragment()))\n            .append(nodes)\n            .children();\n    }\n}","import { Select, HTMLSelector } from '../Select';\n\nexport class CursorPlacement {\n    target: Select;\n    targetPlacement: DOMRect | null;\n    windowProps: {\n        width: number,\n        height: number\n    };\n    constructor(event: MouseEvent, element: HTMLSelector) {\n        this.target = new Select(element);\n        this.targetPlacement = this.target.bounds()[0];\n        this.windowProps = {\n            width: window.innerWidth,\n            height: window.innerHeight\n        };\n        this.target.setCSSProps({\n            position: 'fixed',\n            top: `${this.getClientY(event)}px`,\n            left: `${this.getClientX(event)}px`,\n            maxWidth: `${this.windowProps.width - 10}px`,\n            maxHeight: `${this.windowProps.height - 10}px`,\n            overflow: 'auto'\n        });\n    }\n    /**\n     * Returns context menu's approximate position on X axis\n     * @param {Event} event Event object\n     */\n    getClientX(event: MouseEvent): number {\n        if (this.targetPlacement) {\n            const displacement = event.clientX + this.targetPlacement.width - this.windowProps.width;\n            if (displacement > 0) {\n                return event.clientX - displacement - 4;\n            }\n        }\n        return event.clientX;\n    }\n    /**\n     * Returns context menu's approximate position on Y axis\n     * @param {Event} event Event object\n     */\n    getClientY(event: MouseEvent): number {\n        if (this.targetPlacement) {\n            const displacement = event.clientY + this.targetPlacement.height - this.windowProps.height;\n            if (displacement > 0) {\n                return event.clientY - displacement - 4;\n            }\n        }\n        return event.clientY;\n    }\n}","import { ContextMenu } from \"..\";\n\nif (typeof window !== 'undefined') {\n    // Polyfill custom event\n    if (typeof window.CustomEvent === 'undefined') {\n        class CustomEvent<T> {\n            constructor(event: string, params?: CustomEventInit<T>) {\n                params = params || { bubbles: false, cancelable: false, detail: undefined };\n                const evt = document.createEvent('CustomEvent');\n                evt.initCustomEvent(event, params.bubbles as boolean, params.cancelable as boolean, params.detail);\n                return evt;\n            }\n        }\n        CustomEvent.prototype = window.Event.prototype;\n        window.CustomEvent = CustomEvent as any;\n    }\n}\n\nexport class Beacon<T extends HTMLElement> {\n    #parentThis: ContextMenu<T>;\n    #root: Document | undefined;\n    #beaconEvent = 'closecontextmenu';\n    #resolver?: (value: boolean) => void;\n    constructor(parentThis: ContextMenu<T>) {\n        this.#parentThis = parentThis;\n        if (typeof document !== 'undefined') {\n            this.#root = document;\n        }\n    }\n\n    emit(): void {\n        if (this.#root) {\n            const contextMenuClose = new CustomEvent(this.#beaconEvent, {\n                cancelable: true,\n                bubbles: true,\n                detail: {\n                    originContext: this.#parentThis\n                }\n            });\n            this.#root.dispatchEvent(contextMenuClose);\n        }\n    }\n\n    #beaconListener = (e: Event): void => {\n        const { originContext } = (e as CustomEvent).detail as { originContext: ContextMenu<T> };\n        if (typeof this.#resolver === 'function') {\n            this.#resolver(originContext !== this.#parentThis);\n        }\n    }\n\n    listen(resolve: (value: boolean) => void): void {\n        this.#resolver = resolve;\n        this.#root?.addEventListener(this.#beaconEvent, this.#beaconListener);\n    }\n\n    off(): void {\n        this.#root?.removeEventListener(this.#beaconEvent, this.#beaconListener);\n        this.#resolver = undefined;\n    }\n}","import { Select } from \"./Select\";\nimport { CursorPlacement } from \"./CursorPlacement\";\nimport { Beacon } from \"./Beacon\";\n\nexport interface ContextMenuConfig<T extends HTMLElement, U extends Event> {\n    rootElement?: T;\n    onClick?: (event: U) => boolean | void;\n    onActivate?: (elements: Select) => void;\n    onDeactivate?: (elements: Select, callback: () => void) => void;\n}\n\nexport interface ContextListConfig<T extends HTMLElement, U extends HTMLElement> {\n    rootElement?: T;\n    listElement?: U;\n}\n\nexport interface ContextItemConfig<T extends HTMLElement> {\n    rootElement?: T;\n}\n\nexport class ContextMenu<T extends HTMLElement> {\n    #open = false;\n    #active = false;\n    #beacon: Beacon<T>;\n    #exitFunction = (): void => {\n        this.rootElement = this.rootElement.detach().children();\n        this.#open = false;\n        this.#active = false;\n    }\n    #onClick = (): void => {\n        if (this.#active) {\n            if (\n                this.config\n                && typeof this.config.onDeactivate === 'function'\n            ) {\n                this.#open = true;\n                this.config.onDeactivate(this.rootElement, this.#exitFunction);\n            } else {\n                this.#exitFunction();\n            }\n        }\n    }\n    #onContextMenu = (e: MouseEvent): void => {\n        e.preventDefault();\n        e.stopPropagation(); // For nested context menus\n        this.#beacon.emit(); // Sends notification to other context menu instances to automatically close\n        this.#active = true;\n        if (!this.#open) {\n            this.contextTarget.append(this.rootElement);\n            new CursorPlacement(e, this.rootElement);\n            if (\n                this.config\n                && typeof this.config.onActivate === 'function'\n            ) {\n                this.rootElement.repaint();\n                this.config.onActivate(this.rootElement);\n            }\n        }\n    }\n    #onRootClick = (e: Event): void => {\n        e.stopPropagation();\n        if (\n            this.config\n            && typeof this.config.onClick === 'function'\n        ) {\n            const shouldExit = this.config.onClick.apply(new Select(e.target), [e]);\n            if (shouldExit) {\n                this.#onClick();\n            }\n        }\n    }\n    contextTarget: Select;\n    isSupported: boolean;\n    rootElement: Select;\n    config: ContextMenuConfig<T, Event> = {};\n    constructor(target: string | null, config?: ContextMenuConfig<T, Event>) {\n        this.#beacon = new Beacon(this);\n        if (config && typeof config === 'object') {\n            this.config = Object.freeze(config);\n        }\n        this.contextTarget = typeof target === 'string'\n            ? new Select(target)\n            : new Select().getBodyTag();\n        this.isSupported = !!this.contextTarget.body;\n        this.rootElement = Select.create(\n            this.config && this.config.rootElement\n                ? this.config.rootElement\n                : `<ul class=\"context-menu-list\"></ul>`\n        );\n        this.contextTarget\n            .on('contextmenu', this.#onContextMenu);\n        if (typeof document !== 'undefined') {\n            new Select(document).on('click', this.#onClick);\n        }\n        this.#beacon.listen((shouldClose) => {\n            if (shouldClose) {\n                this.#onClick();\n            }\n        });\n        this.rootElement.on('click', this.#onRootClick);\n    }\n    add(...args: (ContextList<HTMLElement, HTMLElement> | ContextItem<HTMLElement>)[]): ContextMenu<T> {\n        const elements = [...args];\n        for (const element of elements) {\n            if (\n                element instanceof ContextList\n                || element instanceof ContextItem\n            ) {\n                this.rootElement.append(element.rootElement);\n            }\n        }\n        return this;\n    }\n    cleanup(): void {\n        this.contextTarget\n            .off('contextmenu', this.#onContextMenu)\n            .off('click', this.#onClick);\n        this.rootElement.off('click', this.#onRootClick);\n        this.#beacon.off();\n    }\n}\n\n// Generates a context list\nexport class ContextList<T extends HTMLElement, U extends HTMLElement> {\n    config: ContextListConfig<T, U> = {};\n    rootElement: Select;\n    listElement: Select;\n    constructor(title: string, config?: ContextListConfig<T, U>) {\n        if (config && typeof config === 'object') {\n            this.config = Object.freeze(config);\n        }\n        this.rootElement = Select.create(\n            this.config && this.config.rootElement\n                ? this.config.rootElement\n                : `<li class=\"menu-item\"></li>`\n        );\n        this.rootElement.setAttr({\n            'data-has-sub-elements': true\n        });\n        this.listElement = Select.create(\n            this.config && this.config.listElement\n                ? this.config.listElement\n                : `<ul class=\"context-submenu\"></ul>`\n        );\n        this.rootElement\n            .append(title)\n            .append(this.listElement);\n    }\n    get parent(): (Select | null) {\n        return this.rootElement.parent;\n    }\n    add(...args: (ContextList<HTMLElement, HTMLElement> | ContextItem<HTMLElement>)[]): ContextList<T, U> {\n        const elements = [...args];\n        for (const element of elements) {\n            if (\n                element instanceof ContextList\n                || element instanceof ContextItem\n            ) {\n                this.listElement.append(element.rootElement);\n            }\n        }\n        return this;\n    }\n}\n\n// Generates a context item\nexport class ContextItem<T extends HTMLElement> {\n    config: ContextItemConfig<T> = {};\n    rootElement: Select;\n    constructor(title: string, config?: ContextItemConfig<T>) {\n        if (config && typeof config === 'object') {\n            this.config = Object.freeze(config);\n        }\n        this.rootElement = Select.create(\n            this.config && this.config.rootElement\n                ? this.config.rootElement\n                : `<li class=\"menu-item\"></li>`\n        );\n        this.rootElement.append(title);\n    }\n}"],"names":["Select","selector","body","document","elements","querySelectorAll","Node","EventTarget","NodeList","HTMLCollection","Object","prototype","hasOwnProperty","call","i","length","push","parent","getParentSelection","parentNodeList","map","el","parentNode","filter","selected","forEach","HTMLElement","children","child","indexOf","nodes","consumableNodes","tempDiv","createElement","innerHTML","childNodes","target","appendChild","fragment","createDocumentFragment","n","cloneNode","currentFragment","detach","append","textContent","innerText","evaluatorFn","eventType","cb","useCapture","addEventListener","removeEventListener","ref","onceCb","e","apply","getBoundingClientRect","obj","keys","prop","style","attr","setAttribute","getAttribute","undefined","offsetHeight","contains","CursorPlacement","event","element","targetPlacement","bounds","windowProps","width","window","innerWidth","height","innerHeight","setCSSProps","position","top","getClientY","left","getClientX","maxWidth","maxHeight","overflow","displacement","clientX","clientY","CustomEvent","params","bubbles","cancelable","detail","evt","createEvent","initCustomEvent","Event","Beacon","parentThis","originContext","contextMenuClose","dispatchEvent","resolve","ContextMenu","config","rootElement","onDeactivate","preventDefault","stopPropagation","emit","contextTarget","onActivate","repaint","onClick","shouldExit","freeze","getBodyTag","isSupported","create","on","listen","shouldClose","args","ContextList","ContextItem","off","title","setAttr","listElement"],"mappings":"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"}